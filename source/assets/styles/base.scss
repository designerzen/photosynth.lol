@use "vars";

// *{
//     outline:2px solid red;
// }

// Basic margin resets
:where(
    html,body,
    h1,h2,h3,h4,h5,h6,p
    menu,
    ul, ol,
    dl,
    summary,
    figure, picture
){
    margin:0;
    padding:0;
}


:where(html){
    
    // work out most appropriate
    --_col-accent:var(--shade-brand, var(--col-accent, var(--shade-red, blue ) ) );
    
    // absorb viewport height
    height: 100%;
    height: fit-content;

    // allows 100vh to work on mobile safari (sometimes)
    min-height: 100vh;
    min-height: -webkit-fill-available;
    min-height: 100dvh;

    max-width:100%;
    max-width: 100vw;
    max-width: 100dvw;

    color:var(--col-white);	
    // background-color:var(--col-black);
    caret-color: var(--_col-accent );
    accent-color: var(--_col-accent );
    scrollbar-color: var(--_col-accent) transparent;

    // allows letters with decsenders to break through the underline
    // https://css-tricks.com/almanac/properties/t/text-decoration-skip-ink/
    // https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-skip-ink
    text-decoration-skip-ink: auto;

    // overflow: auto;
    // only allow vertical scrolling
    overflow-x: hidden;
    // prevent "overscrolling"
    overscroll-behavior-y: none;

    // make the deafult scroll behavior smooth
    // NB. *unless* prefers-reduce-motion is set (see media query)
    scroll-behavior: smooth;

    // https://kilianvalkhof.com/2022/css-html/your-css-reset-needs-text-size-adjust-probably/
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;
}

:where(body){ 
    // prevent collapse
    min-height: inherit;
    height: inherit;
    // regular arrangement for vertical flow
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    align-content: stretch;    
}

:where(main){	
    display:flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-width:100%;
    margin:auto;
    
    // height: 100%;
    // min-height: 320px;
    //max-height: 100%;
}

:where(menu){
    list-style: none;
    ::marker {
        display: none;
    }
}

:where(article > header){
    width: 100%;
    max-width: calc( var(--max-section-width) - var(--pad) * 2 );
    // margin-left: auto;
    // margin-right: auto;
}


:where(ul){
    list-style: outside disc;
    ::marker {
        color:var(--col-accent);
    }
}


// Data & Tables
img{
    display: block;
    position: relative;
    z-index: 1;
    font-style: italic;
    text-wrap: balance;
}

:is(figure,picture) img{
    border-radius: var(--curve,0);
}

table{
    display: flex;
    width: 100%;

    flex-direction: column;

    tr + tr{
        border-top:var(--stroke,1px) solid var(--col-warm-grey);
        margin-top:0;
    }
    tr{
        padding: var(--pad) 0;
        // padding-bottom: var(--pad);
    }
  
    caption{
        order:9999;
    }
}

@media screen and (min-width: vars.$min-width-2){ 

    table{
        tr{
            align-items: center;
            justify-items: center;
        }
        th{
            max-width: 15%;
        }
    }
}

dl{
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap:var(--pad);
}

dl.data-contact,
dl.data-address{
    display: grid;
    grid-template-columns:repeat( auto-fill, minmax( calc(50% - var(--pad) *  1 ), 10fr) );
    gap:calc(var(--pad) / 2);
    align-items: baseline;
    min-width: calc(50% - var(--pad) *  1 );
}
dl.data-contact{
    grid-template-columns:1fr 5fr ;
}
dd{
    margin:0;
}

th{
    display: block;
    margin-right: calc( var(--pad) / 2 );
    // line-height: 1.2;
}

tr{
    display: flex;
    flex-direction: column;
}
tr + tr {
    margin-top: calc( var(--pad) / 2 );
}

th,
dt{
   
    text-align: left;
}

@media screen and (min-width: vars.$min-width-2) { // Please verify if $min-width-2 (e.g., 800px) is correct or use the appropriate variable from _vars.scss
    tr{
        flex-direction: row;
    }
    th,
    dt{
        color:var(--col-warm-grey, grey);
        width: max-content;
        text-align: right;
    }
}



// Type
:where(
    h1,h2,h3,h4,h5,h6
){ 
    overflow-wrap: break-word;
    text-wrap:balance;
    text-wrap:pretty;
}

:where(
    canvas,
    video,
    picture,
    figure,
    img,
    svg
){
    max-width:100%;
    height:auto;
    box-sizing: border-box;
    display: block;
}

:where(iframe){
    max-width:100%;
    display: block;
    margin-left:auto;
    margin-right:auto;
}

video, 
canvas.canvas-full-size{
    width:100%;
    visibility: hidden;
}

abbr{
    text-decoration: wavy;
    text-decoration-thickness: 1px;
    text-decoration-color: var(--col-white);
    cursor: help;
}


aside{
    
    border-radius: var(--curve);
    border:dashed var(--col-border) 2px;
    background-color: var(--col-stone-light);
    // border-top:dashed var(--col-border) 2px;
   
    // --col-border:var(--col-stone);
    // --col-border:var(--col-stone-light);
    // margin-top:var(--pad);
    padding: calc(1 * var(--pad)) calc(1 * var(--pad));
    margin-left:calc( 2 * var(--pad));
    margin-right:calc( 2 * var(--pad));
    background-color: var(--col-bg);
    max-width: calc( var(--max-section-width) - var(--pad) * 4 );
}

.page aside{
    margin:auto;
    margin-top: calc(var(--pad) * 2);
}

:where(blockquote){
    margin: 0;
}

// Take SVG filters out of the flow
svg[aria-hidden='true'] { 
    position: fixed;
}

// Single taps are dispatched immediately on clickable elements
:where(
    a, area, button, input, label, select, summary,option, textarea, [tabindex]
) {
    -ms-touch-action: manipulation;
    touch-action: manipulation;
    font:inherit;
    letter-spacing: inherit;
    word-spacing: inherit;
    appearance: none;
    -webkit-appearance: none;
}

:where(label){
    --padding:calc( 1 * var(--pad));
    //outline: 1px groove $col-cream;
    cursor: pointer;
    transition:color var(--time-long) linear, 
                background-color 90ms linear;

    padding:var(--padding);// var(--pad) 0 var(--pad);
    position: relative;
    user-select:none;
    text-wrap:pretty;

    &:hover, &:focus{
        color:var(--col-fg, var(--shade-white) );
        //background-color:var(--col-bg, #{$col-blue});
        outline:none;
    }
}


// Select gadget with options ----------------------------------------------
:where(
    input[type=select],
    select
){
    appearance: none;
    //text-align: center;
    padding:calc(var(--pad) / 2 ) ;
    padding-right:calc( var(--pad) * 2 );

    cursor: pointer;
    // simple down triangle
    // background-image: url("data:image/svg+xml;utf8,<svg fill='white' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>");
    // background-repeat: no-repeat;
    // background-position-x: 100%;
    // background-position-y: 50%;

    // icon for the arrow
    background-image: url("/source/assets/icons/down-chevron-white.svg");
    background-repeat: no-repeat;
    background-position-x: calc(100% - var(--pad) / 2);
    background-position-y: 50%;
    // background-size: 14%;
    background-size: 2lh;

    // background-color: transparent;
    background-color: var(--col-bg);
    color:var(--col-text);
    font:inherit;

    display: grid;
    grid-template-areas: "select icon";
    grid-template-columns: auto 1fr;

    cursor: pointer;

    // :focus,
    &:is(
        :open,
        :focus-visible,
        :focus-within
    )
    {
        background-image: url("/source/assets/icons/up-chevron-white.svg");
    }

    // selected
    &:focus:active{
        max-width:none;
    }
    
    &::marker{
        color:white;
        grid-area: icon;
    }

    // Custom arrow
    // &:not([multiple])::after {
    // 	content: "";
    //     grid-area: icon;
    // 	width: 0.8em;
    // 	height: 0.5em;
    // 	background-color: var(--select-arrow, var(--col-accent, black) );
    // 	clip-path: polygon(100% 0%, 0 0%, 50% 100%);
    // }

    // hide arrow on Microsoft IE
    &::-ms-expand {
        grid-area: icon;
        display: none;
    }

    optgroup{
        appearance:none;
        font:inherit;
        font-weight:900;
        text-transform: uppercase;
        margin:auto;
    }

    option{
        padding:var(--pad);
        color:var(--col-text);
        background-color: var(--col-bg);

        text-transform:initial;
        text-align: left;
        font:inherit;
        font-weight: 800;
        // border-radius: 2px;
        transition: var(--time-quick, 90ms) all ease-in;
    
        &:hover, &:focus{
            color:var(--col-white);
            background-color:var(--col-accent);
        }
        &:checked {
            color:var(--col-white);
            background-color:var(--col-accent);
        }
    }

    // safari allows styling of options!
    &:not(:disabled) option {
        
    }

    // New select styling for latest browsers --------------
    &, &::picker(select) {
        appearance: base-select;
    }
    &::picker(select) {
        transition:
            opacity .2s ease,
            transform .2s linear,
            display .2s allow-discrete,
            overlay .2s allow-discrete;
    }

    &::picker-icon {
        display: none;
    }

    // set the off stage styles
    &:not(:open)::picker(select) {
        opacity: 0;
        transform: scale(.95);
    }

    // set the on stage styles
    &:open::picker(select) {
        opacity: 1;
        transform: scale(1);
    }

    // transition the selected option changing
    selectedcontent>* {
        transition:
            transform 1s linear,
            display 1s allow-discrete,
            opacity 1s;

        @starting-style {
            opacity: 0;
            transform: translateY(10px);
        }

        opacity: 1;
    }
}

:where(label){
    color:inherit;
}

:where(input){
    // For iOS < 15 you need to remove the background
    background-color: var(--col-bg, white);
    padding:calc(var(--pad) / 2) calc(var(--pad) / 2);
    margin:0;
    font: inherit;
    // color: currentColor;
    color: var(--col-text);
}

:where( input, textarea, [contenteditable]) {
    caret-color: var(--col-accent);
}

:where(	
    input[type=range],
    input[type=submit],
    input[type=reset],
    input[type=button],
    button
){
    cursor: pointer;
    text-align: center;
}

form{
    background-color: var(--col-bg);
    background-color: color-mix( in oklch, var(--col-bg) 75%, transparent );
    border-radius:var(--curve);
}

// *{
//     outline:1px solid rgba(255,0,0,0.5);
// }

fieldset{
    padding: calc( var(--pad) );
    // padding: calc( var(--pad) / 2 ) calc( var(--pad) );
    border-radius: var(--curve, 4px);
    // to balance out the legend we have extra lower padding
    padding-bottom: calc( var(--pad) * 2 );

    background-color: inherit;
    border-color: var(--col-stone);
    
    legend{
        text-align: center;
        padding-left:calc( var(--pad)  );
        padding-right:calc( var(--pad)  );
        background-color: inherit;
        border-radius: var(--curve, 4px);
        display: block;
        margin:0 auto;
    }
}

output{
    display: block;
}

// Marked text ----------------------------------------------
::selection,
:where(mark){
    // background-color: Highlight;
    // color: HighlightText;
    background-color:var(--col-orange);
    padding:calc( var(--pad) * 1 ) calc( var(--pad) * 2 );
}

hr{
    display:block;
    height: 1rem;
    width:100%;
    padding:0;
    margin:var(--pad);
    border:0;
    background-image:radial-gradient( farthest-corner at 50% 0, rgba(255,255,255,0.6) 0,transparent 50% );
}

[aria-busy="true"] {
    cursor: progress;
}

// Make sure textareas without a rows attribute are not tiny 
textarea:not([rows]) {
    min-height: 10ch;
}

// Anything that has been anchored to should have extra scroll margin 
:target {
    scroll-margin-block: 5ex;
}

audio {
    color-scheme: dark;
    background-color: var(--col-accent);
}


// override the above
@media screen and (prefers-reduced-motion) {
    html{
        scroll-behavior:unset;
    }
}