
// This is just an accessible markup implementation of the figure
// element correctly wired up for roles and aria to accomodate the
// voice over in browsers such as Chrome that ignore figlabel currently
// See : https://www.scottohara.me/blog/2019/01/21/how-do-you-figure.html

// Crazy that the figure element requires role=figure

figure{
    --depth:calc( var(--pad) / 4 );
    --col:var(--col-accent);
    
    background: inherit;
    display: flex;
    flex-direction: column;
    align-content: center;
    overflow: hidden;
    padding-top: var(--pad);
    padding-bottom: var(--pad);
    position: relative;
 
    // there may be nested icons in figcaption for attributions etc
    > img{
       
        height:100%;
        // min-height:50vh;
        width:auto;
       
        // min-width: 100%;
        max-height: calc(100vh - 2lh - var(--footer-height) - var(--sticky-top) - var(--pad) * 2 );
        max-height: calc(100dvh - 2lh - var(--footer-height) - var(--sticky-top) - var(--pad) * 2 );
        margin-left: auto;
        margin-right: auto;
    }

    > picture{
         
        img{
            width: 100%;
            height: auto;
        }
    }

    
    figcaption{
        text-align: center;
        font-weight: 600;
        font-style: italic;
        color:var(--col-plum);
    }

    // if figcaption is below image...
    :is(img,picture) + figcaption{
        padding-top: var(--pad);
        padding-bottom: var(--pad);
        background: var(--col-bg);
        border-radius: var(--curve, 4px);
    }
}

// as these overlay and stick...
figure.sticky{
    // background: var(--col-bg);
    // ensure it sticks a little away from the top
    top: calc(var(--sticky-top) + var(--pad) * 0);

    margin-bottom: calc( var(--pad) * 6);

    img{
        max-width:min(420px, 66%);
    }
    figcaption{
        width: 100%;
    }
}


.bumpers{
    border-top: var(--depth) solid var(--col);
    border-bottom: var(--depth) solid var(--col);

    margin-top: var(--pad);
    margin-bottom: var(--pad);

    > img{
       background-color: var(--col);
    }
}

.corner-bumpers { 
    // corner size
    --corner-size: calc( 8 * var(--pad) ); 
    --depth:calc( var(--pad) / 2 );
    --col:var(--col-plum);
    // gap 
    padding: var(--pad);
    border: var(--depth) solid var(--col);
    margin-top: var(--pad);
    margin-bottom: var(--pad);

    mask:
        conic-gradient(at var(--corner-size) var(--corner-size),#0000 75%,#000 0)
        0 0/calc(100% - var(--corner-size)) calc(100% - var(--corner-size)),
        conic-gradient(#000 0 0) content-box;
}