@use "./ease";

// External links
a[target="_blank"]{
    text-decoration: dashed;
}

button,
input[type=checkbox],
input[type=radio]{
    --size:var(--button-size, 44px);
    // Add if not using autoprefixer
    -webkit-appearance: none;
    // Remove most all native input styles 
    appearance: none;
    border:0;
    border-radius: var(--curve, 4px);
    background-color: transparent;
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    outline: 0;
    min-width: var(--size);
    min-height: var(--size);
    pointer-events: auto;
    box-sizing: border-box;

    transition: 
        var(--time-quick, 90ms) background-color linear,
        var(--time-quick, 90ms) border-color linear;

    &:hover{
        cursor: pointer;
        background-color: var(--col-hover);
        color:var(--col-bg);

        // if it has an icon, invert it too
        &::before{
            filter:brightness(100%) invert(100%);
        }
    }

    &:focus-visible{
        background-color:var(--col-blue);
        // background-color:var(--col-orange);
    }

    &:checked{
        background-color: var(--col-plum);
        border-color:var(--col-accent);
    }
      
    &:checked:focus-visible{
        background-color:var(--col-blue);
    }
}

input[type=checkbox]{
    
}

input[type=radio]{
    --size:var(--button-size, 80px);//44px;
  
    background-color:color-mix( in oklch, var(--col-bg) 66%, transparent);
    border:calc( var(--size) / 8 ) solid var(--col-stone, var(--col-charcoal));
    border-radius: 999px;
    grid-area:icon; //1/1/-1/-1;
    display: inline-grid;
    place-content: center;
    
    transition: 
        opacity var(--time-quick, 90ms) linear,
        border-width var(--time-quick, 90ms) ease.$easeInBack; 
 
    &:hover{
        border-color:var(--col-accent);
    }

    &:active{
        border-width:calc( var(--size) / 4 )
    }
}

label{
    input[type=radio]{
        // height: 100%;
    }
    span{
        pointer-events: none;
        position: relative;
    }
}

@supports(selector(:has(p))) {

    label:has(input:checked){

        input[type=radio]{
            background-color: var(--col-accent);
        }

        &::before,
        &::after,
        span{
            color:var(--col-white,white);
        }
    }

}

fieldset label{
    display:inline-grid;
    grid-template-areas:
        "icon" 
        "text"
    ;
    
    gap:calc( var(--pad) / 4 );
    grid-template-columns: 1fr;
    grid-template-rows: 
        1fr 
        auto;

    // align-items: stretch;
    align-items: center;
    justify-items: center;

    text-align: center;
    
    line-height: 1.1;
    padding: 0;

    > * {
        grid-area: text;
    }
    > span{
        grid-area: icon;
    }

    // FIX: for aspect ratio to remain the same irregardless of width...
    // &::after{
    //     content:'';
    //     padding-bottom:100%;
    //     grid-area:1/1/-1/-1;
    //     height:0;
    //     overflow: hidden;
    // }
}


button,
a.cta{
    z-index: 909;
    position: relative;
    align-self: flex-end;
    justify-self: end;
    touch-action: manipulation;
}

// we need space around the button
.cta{
    margin-top:var(--pad);
    margin-bottom:var(--pad);
    transition: var(--time-quick, 90ms) transform linear;
    &:active{
        transform: var(--button-active);
    }
}

.button-image{
    --size:var(--button-size, 144px);
    background-position: center;
    background-size: contain;
    background-repeat: no-repeat;
    width: var(--size);
    height: var(--size);
    padding: 0;
    border:0;
    color: transparent;
    user-select: none;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
}

.button-close{
    display: inline-block;
    text-align: center;
    font-size: 0;
    box-sizing: border-box;
    border-radius: 99px;
    background-color: var(--col-bg);
    color: transparent;
    overflow: hidden;
    display: grid;
    border:2px solid var(--col-charcoal);
    outline:9px solid var(--col-bg);
    transition: var(--time-quick, 90ms) transform linear;
    // outline:9px solid color-mix( in oklch, var(--col-bg) 38%, transparent );

    &::before{
        content:'^';
        font-size:16px;
        background-image: url(/source/assets/icons/up-chevron.svg);
        background-position: center;
        background-size: contain;
        background-repeat: no-repeat;
        color:transparent;
        grid-area:1/1/-1/-1;
    }

    &:hover{
        color:transparent;
        background-color: var(--col-text);
        &::before{
            background-image: url(/source/assets/icons/up-chevron-white.svg);
        }
    }

    &:active{
        transform: var(--button-active);
    }
}

.button-share{
    --size:var(--button-size, 44px);
    margin:var(--pad) calc(2 * var(--pad));
    color:transparent;
    
    width: var(--size, 1lh);
    overflow:hidden;
    border-radius:999px;
    padding:0;
    margin:0;

    color:transparent;

    &::before{
        content:'';
        font-size:inherit;
        background-image: url(/source/assets/icons/share.svg);
        background-position: center;
        // background-size: contain;
        box-sizing:border-box;
        background-size: auto;
        background-repeat: no-repeat;
        width: var(--size, 1lh);
        height: var(--size, 1lh);
        display: inline-block;
        // vertical-align: middle;
        // padding:0 calc(var(--pad)/2);
        // margin-right:calc( var(--pad) / 4 );
        filter:brightness(100%) invert(100%);
        border: 2px solid black;
        border-radius: 999px;
        padding: 2px;
    }

    &:hover,
    &:focus{
        color:var(--color-text);
    }
}

.button-play,
button[data-control-play]{
    &::before{
        content:'';
        font-size:inherit;
        background-image: url(/source/assets/icons/play_circle.svg);
        background-position: center;
        background-size: contain;
        background-repeat: no-repeat;
        width: var(--size, 1lh);
        height: var(--size, 1lh);
        display: inline-block;
        vertical-align: middle;
        // padding:0 calc(var(--pad)/2);
        margin-right:calc( var(--pad) / 4 );
        filter:brightness(100%) invert(100%);
    }
}

.button-read{
    --offset-right: calc( 44px + var(--pad));
    background-color: var(--col-accent);
    background-image: url(/source/assets/icons/play_circle.svg);
    background-size: contain;
    background-position: center left;
    font-size:0;
    color:transparent;
    top:calc( 2 * var(--pad) );
    // right:calc( 2 * var(--pad) );
    left:calc( 100% - var(--offset-right,0));
    position: absolute;
    position: sticky;
    box-sizing: border-box;

    // float: right;
    // margin-top:calc( 2 * var(--pad) );
    // margin-right:calc( 2 * var(--pad) );
    shape-outside: circle(50%);

    &[data-speaking]{
        background-image: url(/source/assets/icons/stop_circle.svg);
    }
}

// clear some room for the button
[data-readable] .button-read + *:first-of-type{
    padding-right:calc( var(--pad) * 3);
}

a.back-to-top,
a.skip-to-content{
    z-index: 1;
    display: grid;
    grid-template-columns: 0 1fr;
    font-size: 0;
    padding:calc(var(--pad) / 4);
    overflow: hidden;
    overflow: clip;
    color: transparent;

    &::after{
        content:'';
        order:-99;
        min-width: 44px;
        min-height: 44px;
        display: inline-block;
        vertical-align: middle;
        background-image: url(/source/assets/icons/up-chevron.svg);
        background-repeat: no-repeat;
        background-size: contain;
        background-position: center;
        filter: invert(100%) contrast(92%);
        // transition: 
        //     var(--time-quick, 90ms) opacity ease-in-out,
        //     var(--time-quick, 90ms) transform ease-in-out;
    }

    &:hover::after,
    &:active::after{
        // transform: translateY(-100%);
        animation: BackToTop 0.42s ease-in-out;
    }   
}

a.back-to-top{
    position: fixed;
    top:0;//1px;
    right:var(--pad);
    justify-self: end;
    // margin-top:1px;
    margin-bottom:1px;
    box-sizing: border-box;
    padding: 0;
    z-index: 868;
}

a.skip-to-content{
    background-color: var(--col-accent);
    min-height: 100%;
    box-sizing: content-box;
    padding-top:0;
    padding-bottom:0;
        
    &::after{
        background-image: url(/source/assets/icons/down-chevron.svg);
    }

    &:hover{
       
    }

    &:hover::after,
    &:active::after{
        animation: BackToTop 0.66s ease-in-out reverse;
    }
}


@media screen and (min-width:900px) {
    
    a.back-to-top{
        grid-template-columns: auto 1fr;
        font-size: inherit;
        color:var(--col-white);
        padding:var(--pad);
        // max-width:88px;
        max-width: calc(2 * 44px);

        &::after{
            display: none;
        }
    }
    .button-read{
        --offset-right: calc(3 * 44px + var(--pad) * 2);
    }
}

label[for="toggle-midi"]{
// #toggle-midi{
    // position: absolute;
    padding:0;
    margin: 0;
    // bottom:var(--pad);
    // left:var(--pad);
    width: fit-content;
  
    &::before{
        content: '';
        background-image:url("/source/assets/icons/midi-copyright-free.svg");
        // background-image:url("../logos/midi-association.svg");
        background-repeat: no-repeat;
        background-position: center;
        grid-area: 1/1/-1/-1;
        display: none;
        z-index: 1;
    }

    &:has(:checked)::before{ 
        filter:brightness(0%) invert(100%);
    }
}

aside > label[for="toggle-midi"]{
    display: grid;
    font-size: 0;
    color: transparent;
    // margin-bottom: var(--pad);
 
    &::before{
        display: block;
    }
}

#toggle-midi{
    --size:66px;
    grid-area: 1/1/-1/-1;
    border-radius: 999px;
    overflow: hidden;
}

#button-text-size-increase,
#button-text-size-decrease{
    &::before{
        content:'';
        display: block;
        top:0;
        left:0;
        position: absolute;
        width: 100%;
        height: 100%;
        background-image:url("/source/assets/icons/font_decrease_filled.svg");
        background-size: contain;
        background-repeat: no-repeat;
    }
}

#button-text-size-decrease{
    &::before{
        background-image:url("/source/assets/icons/font_decrease_filled.svg");
    }
    // background-image:url("/source/assets/icons/font_decrease_filled.svg");
}

#button-text-size-increase{
    &::before{
        background-image:url("/source/assets/icons/font_increase_filled.svg");
    }
    // background-image:url("/source/assets/icons/font_increase_filled.svg");
}


#song-timbre-next,
#song-timbre-previous,
#song-timbre-random{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    border-radius: var(--curve, 4px);
    min-width: 44px;
    margin:0;
    padding: var(--pad);
    gap:calc(var(--pad) / 4 );
    &::before{
        content:'';
        background-repeat: no-repeat;
        background-position: center;
        background-size: contain;
        width:var(--icon-size, 44px);
        height:var(--icon-size, 44px);
        display: inline-block;
        vertical-align: middle;
        filter:brightness(0) invert(1);
    }
}

#song-timbre-previous{
    &::before{
        background-image: url('/source/assets/icons/skip_previous.svg');   
    }
}

#song-timbre-next{
    &::before{
        background-image: url('/source/assets/icons/skip_next.svg');
    }
}
#song-timbre-random{
    &::before{
        background-image: url('/source/assets/icons/interests.svg');  
        // background-image: url('/source/assets/icons/fast_forward_black_24dp.svg');  
    }
}


#song-timbre-select{
    border-radius: var(--curve, 4px);
    background-color: var(--col-button-red);
    color: var(--col-white);
    box-shadow:var(--shadow-button);
}


label[for="button-happy"]{
    
}

#button-happy{
    border-radius:40px 0 0  40px;
    grid-area:happy;
    align-self: start;
    background-image: url(/source/assets/figures/happy.svg);
    transition: var(--time-quick, 90ms) transform linear;
    &:active{
        transform: var(--button-active);
    }
    &:hover{
        background-blend-mode: screen;
        background-color: var(--col-plum);
    }
}

label[for="button-sad"]{

}

#button-sad{
    border-radius:0 40px 40px 0;
    grid-area:sad;
    background-image: url(/source/assets/figures/sad.svg);
    transition: var(--time-quick, 90ms) transform linear;
    &:active{
        transform: var(--button-active);
    }
    &:hover{
        background-blend-mode: screen;
        background-color: var(--col-plum);
    }
}

// TIMBRES ==============================================================

label[for="timbre-sine"]{
    &::before{
        content:'';
        color: inherit;
       
        grid-area:icon;
        width:22px;
        height:22px;
        // background-color: currentColor;
        border-radius: 99px;
        border: 4px solid currentColor;
        z-index: 1;
        box-sizing: border-box;
    }
}

label[for="timbre-square"]{
    &::before{
        content:'';
        color: inherit;
       
        grid-area:icon;
        width:22px;
        height:22px;
        background-color: currentColor;
        // border: 4px solid currentColor;
        z-index: 1;
        box-sizing: border-box;
    }
}

label[for="timbre-triangle"]{
    &::before{
        content:'';
        color: inherit;
       
        grid-area:icon;
        width: 0;
        height: 0;
        border-left: 11px solid transparent;
        border-right: 11px solid transparent;
        border-bottom: 22px solid currentColor;
        // background-color: currentColor;
        z-index: 1;
        box-sizing: border-box;
    }
}

label[for="timbre-sawtooth"]{
    &::before,
    &::after{
        content:'';
        color: inherit;
        grid-area:icon;
        z-index: 1;
        box-sizing: border-box;
        width: 0;
        height: 0;
        border-bottom: 22px solid currentColor;
        border-left: 22px solid transparent;
        padding:0;
    }
    &::before{
        transform: translateX(-50%);
    }

    &::after{
        transform: translateX(50%);
    }
}