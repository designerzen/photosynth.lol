button,
input[type=checkbox],
input[type=radio]{
    --size:44px;
    // Add if not using autoprefixer
    -webkit-appearance: none;
    // Remove most all native input styles 
    appearance: none;
    border:0;
    background-color: transparent;
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    outline: 0;
    min-width: var(--size);
    min-height: var(--size);


    &:hover{
        cursor: pointer;
        background-color: var(--col-accent);
    }

    &:focus-visible{
        background-color:var(--col-orange);
    }
}



fieldset label{
    display:inline-grid;
    grid-template-areas:
        "icon" 
        "text"
    ;

    
    gap:calc( var(--pad) / 4 );
    grid-template-columns: 1fr;
    grid-template-rows: 
        1fr 
        auto;

    align-items: center;        
    justify-items: center;
    text-align: center;
    line-height: 1.1;
    padding: 0;

    > * {
        grid-area: text;
    }
    > span{
        grid-area: icon;
    }
    &::after{
        content:'';
        padding-bottom:100%;
        grid-area:1/1/-1/-1;
        height:0;
        overflow: hidden;
    }
}

input[type=checkbox]{
    box-sizing: border-box;
}

input[type=radio]{
    --size:80px;//44px;
  
    border:calc( var(--size) / 8 ) solid var(--col-stone);
    // border: 0.15em solid currentColor;
    border-radius: 999px;
    box-sizing: border-box;
    // transform: translateY(-0.075em);

    grid-area:icon; //1/1/-1/-1;
    display: inline-grid;
    place-content: center;
    
    $easeInBack: cubic-bezier(0.6, -0.28, 0.735, 0.045);
    $easeOutBack: cubic-bezier(0.175, 0.885, 0.32, 1.275);
    $easeInOutBack: cubic-bezier(0.68, -0.55, 0.265, 1.55);
    
    transition: 
        opacity 90ms linear,
        border-width 90ms #{$easeInBack}; 

    &:checked{
        background-color: var(--col-plum);
        border-color:var(--col-accent);
    }

    &:focus-visible{
        background-color:var(--col-blue);
    }

    &:checked:focus-visible{
        background-color:var(--col-blue);
    }

    &:hover{
        border-color:var(--col-accent);
    }

    &:active{
        border-width:calc( var(--size) / 4 )
    }
}

label{
    input[type=radio]{
        // height: 100%;
    }
    span{
        pointer-events: none;
    }
}

@supports(selector(:has(p))) {

    label:has(input:checked){

        input[type=radio]{
            background-color: var(--col-accent);
        }

        &::before,
        &::after,
        span{
            color:var(--col-white,white);
        }
    }

}

.back-to-top{
    position: fixed;
    top:1px;
    justify-self: end;
    margin-right:var(--pad);
    margin-bottom:1px;
    z-index: 1;
    &::after{
        min-width: 44px;
        display: inline-block;
        vertical-align: middle;
    }
}

#button-text-size-decrease{
    background-image:url("../icons/font_decrease_filled.svg");
}

#button-text-size-increase{
    background-image:url("../icons/font_increase_filled.svg");
}


label[for="timbre-sine"]{
    &::before{
        content:'';
        color: inherit;
       
        grid-area:icon;
        width:22px;
        height:22px;
        // background-color: currentColor;
        border-radius: 99px;
        border: 4px solid currentColor;
        z-index: 1;
        box-sizing: border-box;
    }
}

label[for="timbre-square"]{
    &::before{
        content:'';
        color: inherit;
       
        grid-area:icon;
        width:22px;
        height:22px;
        background-color: currentColor;
        // border: 4px solid currentColor;
        z-index: 1;
        box-sizing: border-box;
    }
}

label[for="timbre-triangle"]{
    &::before{
        content:'';
        color: inherit;
       
        grid-area:icon;
        width: 0;
        height: 0;
        border-left: 11px solid transparent;
        border-right: 11px solid transparent;
        border-bottom: 22px solid currentColor;
        // background-color: currentColor;
        z-index: 1;
        box-sizing: border-box;
    }
}

label[for="timbre-sawtooth"]{
    &::before,
    &::after{
        content:'';
        color: inherit;
        grid-area:icon;
        z-index: 1;
        box-sizing: border-box;
        width: 0;
        height: 0;
        border-bottom: 22px solid currentColor;
        border-left: 22px solid transparent;
        padding:0;
    }
    &::before{
        transform: translateX(-50%);
    }

    &::after{
        transform: translateX(50%);
    }
}
